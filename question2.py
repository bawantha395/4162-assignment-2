import numpy as np
import cv2
import matplotlib.pyplot as plt
import os


def region_growing(img, seed_point, threshold=20):
    height, width = img.shape
    segmented = np.zeros_like(img)
    visited = np.zeros_like(img, dtype=bool)

    seed_x, seed_y = seed_point
    seed_value = int(img[seed_x, seed_y])
    stack = [(seed_x, seed_y)]

    while stack:
        x, y = stack.pop()
        if visited[x, y]:
            continue

        visited[x, y] = True
        pixel_value = int(img[x, y])

        if abs(pixel_value - seed_value) <= threshold:
            segmented[x, y] = 255
            for dx in [-1, 0, 1]:
                for dy in [-1, 0, 1]:
                    if dx == 0 and dy == 0:
                        continue
                    nx, ny = x + dx, y + dy
                    if 0 <= nx < height and 0 <= ny < width and not visited[nx, ny]:
                        stack.append((nx, ny))

    return segmented


# Load the original image generated by Q1.py
import cv2
original_img = cv2.imread('images/original.png', cv2.IMREAD_GRAYSCALE)
if original_img is None:
    raise FileNotFoundError("images/original.png not found. Please run Q1.py first.")

# Use seed point inside object 1
seed = (25, 25)
region_result = region_growing(original_img, seed, threshold=20)

# Save result
os.makedirs('images', exist_ok=True)
cv2.imwrite('images/region_grown.png', region_result)

# Display result
plt.figure(figsize=(8, 4))

plt.subplot(1, 2, 1)
plt.title("Original Image")
plt.imshow(original_img, cmap='gray')
plt.axis("off")

plt.subplot(1, 2, 2)
plt.title("Region Grown")
plt.imshow(region_result, cmap='gray')
plt.axis("off")

plt.tight_layout()
plt.savefig('images/region_growing_results.png')
plt.show()